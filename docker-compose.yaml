services:
  # Standup Nginx webserver
  webserver:
    build:
      context: ./webserver
      args:
        NGINX_USE_TLS: $NGINX_USE_TLS
    depends_on:
      flask_app:
        condition: service_started
    ports:
      - $NGINX_LISTEN_PORT:$NGINX_LISTEN_PORT
      - $NGINX_LISTEN_PORT_TLS:$NGINX_LISTEN_PORT_TLS
    volumes:
      - ./webserver/dist:/usr/share/nginx/apcragg-space:ro
    # Passed in at run time
    env_file:
      - .env
    # Build environment
    environment:
      - NGINX_SSL_CERT=$NGINX_SSL_CERT
      - NGINX_SSL_CERT_KEY=$NGINX_SSL_CERT_KEY
      - NGINX_SSL_CERT_DH=$NGINX_SSL_CERT_DH
      - NGINX_SSL_CONF=$NGINX_SSL_CONF
      - NGINX_HOSTNAME=$NGINX_HOSTNAME

  # Standup Python webserver layer
  flask_app:
    build: ./flask_app
    depends_on:
      redis:
        condition: service_started
    ports:
      - $NGINX_BACKEND_PORT_TLS
    env_file:
      - .env

  # Start CPU Service
  cpu-usage:
    build: ./services/cpu-usage
    depends_on:
      redis:
        condition: service_started
    # Passed in at run time
    env_file:
      - .env

  # Start PlutoSDR Service
  pluto:
    build: ./services/pluto
    devices:
      - /dev/bus/usb/ # TODO: Should we template this and find only the device we need?
    depends_on:
      redis:
        condition: service_started
    # Passed in at run time
    env_file:
      - .env
    environment:
      - PLUTO_URI=$PLUTO_URI

  # Start DB Service
  history-reader:
    build: ./services/history-reader
    depends_on:
      redis:
        condition: service_started
    env_file:
      - .env
      - ./services/history-reader/.ts_creds

  # Start Reids
  redis:
    build: ./redis
    # Passed in at run time
    env_file:
      - .env
